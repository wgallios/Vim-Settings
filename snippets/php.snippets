snippet mget
	${1:variable} = $vbulletin->sd['memcachemanual']->get($cache_key, ${2:"namespace"});
snippet mset
	$vbulletin->sd['memcachemanual']->set($cache_key, ${1:variable}, ${2:timeout}, ${3:"namespace"});
snippet mdec
	$vbulletin->sd['memcachemanual']->decrement($cache_key, 1, ${1:"namespace"});
snippet mdel
	$vbulletin->sd['memcachemanual']->delete($cache_key, ${1:"namespace"});
snippet mflush
	$vbulletin->sd['memcachemanual']->flush($cache_key);
snippet minc
	$vbulletin->sd['memcachemanual']->increment($cache_key, 1, ${1:"namespace"});
snippet mcache
	${1:variable} = $vbulletin->sd['memcachemanual']->get($cache_key, ${2:"namespace"});
	if (!$1)
	{
		$vbulletin->sd['memcachemanual']->set($cache_key, $1, ${3:timeout}, $2);
	}
snippet while
	while (${1:/* condition */})
	{
		${2:// code...}
	}
snippet fore
	foreach ($${1:variable} as $${2:key}) 
	{
		${3:// code...}
	}
snippet arr
	$${1:arrayName} = array
	(
		'${2}' => ${3},
	);${4}
snippet if
	if (${1: /* condition */})
	{
		${2:// code ...}
	}
snippet function
	function ${1:functionName} ($${2:variable})
	{
		${3://code ...}
	}
snippet sql
	sql= "${1://SELECT * FROM ...}";

	$query = $this->db->query($sql);

	$results = $query->result();

	return $results;
snippet insert
	$sql = "${1://INSERT INTO ...}";

	$this->db->query($sql);

	return true;
snippet string
	$${1:stringVariableName} = "${2://String...}";
snippet table
	table class='${1:class}'>
		<thead>
			<tr>
				<th></th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td></td>
			</tr>
		</tbody>
	</table>
snippet div
	div class='${1:class}'>
		${2:<!-- HTML //-->}
	</div>
snippet class
	class ${1:class name}
	{
		// constructor
		public function ${2:class name}
		{

		}


	}
snippet try
	try
	{

	}
	catch(Exception $e)
	{

	}
snippet throw
	throw new Exception();
